@model VardaanCab.Domain.DTO.CorporatePackageDTO
@{
    ViewBag.Title = "Edit Corporate Package";
    Layout = "~/Views/Shared/Master/_NewAdminLayout.cshtml";
    string[] monthlyTypes = new string[] { "monthly", "monthly-route", "monthly-trip" };
}


<style>
    .row {
        margin-top: 1% !important;
    }
</style>

@using (Html.BeginForm())
{
    @Html.HiddenFor(a => a.Id)
    @Html.HiddenFor(a => a.IsActive)
    @Html.HiddenFor(a => a.MenuId)
    @Html.HiddenFor(a => a.PackageTypeName)

<div class="container-fluid">
    <div class="row">

        <div class="col-12">
            <div class="row">
                <div class="col-sm-12">
                    <!--driver detail start-->
                    <div class="card">
                        
                        <div class="card-header  card-header--2">

                            <div>
                                <h5>Edit Corporate Package</h5>
                            </div>

                            <form class="d-inline-flex">
                                <a href="/CorporatePackage/All?menuId=@Model.MenuId" class="btn btn-primary">Show all</a>
                            </form>

                        </div>
                        <div class="card-body">
                            

                            @if (TempData["msg"] != null)
                            {
                                <div class="row r">
                                    <div class="col-md-12">
                                        <div class="alert alert-info">
                                            @TempData["msg"]
                                        </div>
                                    </div>
                                </div>
                            }

                            <div class="row r">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        PackageType *
                                        @Html.DropDownListFor(a => a.PackageType_Id, Model.PackageTypes, "Select", new { @class = "form-control" })
                                        <span class="text-danger">
                                            @Html.ValidationMessageFor(a => a.PackageType_Id)
                                        </span>
                                    </div>

                                    <div class="form-group">
                                        Rental Type *
                                        @Html.DropDownListFor(a => a.RentalType_Id, Model.RentalTypes, "Select", new { @class = "form-control" })
                                        <span class="text-danger">
                                            @Html.ValidationMessageFor(a => a.RentalType_Id)
                                        </span>
                                    </div>

                                    <div class="form-group">
                                        Vehicle *
                                        @Html.DropDownListFor(a => a.VehicleModel_Id, Model.VehicleModels, "Select", new { @class = "form-control" })
                                        <span class="text-danger">
                                            @Html.ValidationMessageFor(a => a.VehicleModel_Id)
                                        </span>
                                    </div>

                                    <div id="monthly" style="@if(!monthlyTypes.Contains(Model.PackageTypeName)) {<text>display:none</text>}">
                                        <div class="form-group">
                                            Pickup Location *
                                            @Html.TextBoxFor(a => a.PickupLocation, new { @class = "form-control" })
                                            <span class="text-danger">
                                                @Html.ValidationMessageFor(a => a.PickupLocation)
                                            </span>
                                        </div>
                                        <div class="form-group">
                                            Drop Location *
                                            @Html.TextBoxFor(a => a.DropLocation, new { @class = "form-control" })
                                            <span class="text-danger">
                                                @Html.ValidationMessageFor(a => a.DropLocation)
                                            </span>
                                        </div>

                                        <div class="form-group">
                                            No Of Days *
                                            @Html.TextBoxFor(a => a.NoOfDays, new { @class = "form-control" })
                                            <span class="text-danger">
                                                @Html.ValidationMessageFor(a => a.Fare)
                                            </span>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        Fare *
                                        @Html.TextBoxFor(a => a.Fare, new { @class = "form-control" })
                                        <span class="text-danger">
                                            @Html.ValidationMessageFor(a => a.Fare)
                                        </span>
                                    </div>

                                    <div class="form-group">
                                        Min Km *
                                        @Html.TextBoxFor(a => a.MinKm, new { @class = "form-control" })
                                        <span class="text-danger">
                                            @Html.ValidationMessageFor(a => a.MinKm)
                                        </span>
                                    </div>

                                    <div id="regularDiv">
                                        <div class="form-group">
                                            Min Hrs *
                                            @Html.TextBoxFor(a => a.MinHrs, new { @class = "form-control" })
                                            <span class="text-danger">
                                                @Html.ValidationMessageFor(a => a.MinHrs)
                                            </span>
                                        </div>

                                        <div class="form-group">
                                            Extra Per Hour *
                                            @Html.TextBoxFor(a => a.ExtraPerHour, new { @class = "form-control" })
                                            <span class="text-danger">
                                                @Html.ValidationMessageFor(a => a.ExtraPerHour)
                                            </span>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        Extra Per Km *
                                        @Html.TextBoxFor(a => a.ExtraPerKm, new { @class = "form-control" })
                                        <span class="text-danger">
                                            @Html.ValidationMessageFor(a => a.ExtraPerKm)
                                        </span>
                                    </div>


                                    <div class="form-group">
                                        Night Charges *
                                        @Html.TextBoxFor(a => a.NightCharges, new { @class = "form-control" })
                                        <span class="text-danger">
                                            @Html.ValidationMessageFor(a => a.NightCharges)
                                        </span>
                                    </div>

                                    @*<div class="form-group">
                        InterState Charges *
                        @Html.TextBoxFor(a => a.InterStateCharge, new { @class = "form-control" })
                        <span class="text-danger">
                            @Html.ValidationMessageFor(a => a.InterStateCharge)
                        </span>
                    </div>*@

                                    <div class="form-group" id="outstationDiv" @if (Model.PackageTypeName.ToLower() != "outstation") { <text> style="display:none" </text> }>
                                        Outstation TA/Day *
                                        @Html.TextBoxFor(a => a.OutStationCharge, new { @class = "form-control" })
                                        <span class="text-danger">
                                            @Html.ValidationMessageFor(a => a.OutStationCharge)
                                        </span>
                                    </div>



                                </div>
                            </div>

                        </div>
                        <div class="card-footer text-end">
                            <input type="submit" class="btn btn-primary" value="Save" />
                        </div>
                    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    

                        }

                        <script>
                            //var monthlyDiv = document.getElementById("monthly");
                            //var monthlyTypes = ["monthly", "monthly-route", "monthly-trip"]
                            //document.onload = function () {
                            //   let ddptype = document.getelementbyid("packagetype_id");
                            //   let pckjtypename = ddptype.options[ptype.selectedindex].text;
                            //   if (monthlytypes.includes(pckjtypename)) {
                            //       monthlydiv.style.display = 'block';
                            //   }
                            //   else {
                            //       monthlydiv.style.display = 'none';
                            //   }
                            //}

                            document.getElementById("PackageType_Id").onchange = function () {
                                debugger
                                var outstationDiv = document.getElementById("outstationDiv");
                                var regularDiv = document.getElementById("regularDiv");
                                var pType = document.getElementById("PackageType_Id");
                                var pTypeId = pType.value;
                                var pTypeName = pType.options[pType.selectedIndex].text;
                                if (pTypeName.toLowerCase() === "outstation") {
                                    outstationDiv.style.display = 'block';
                                    regularDiv.style.display = 'none';
                                }
                                else {
                                    regularDiv.style.display = 'block';
                                    outstationDiv.style.display = 'none';
                                }
                                var rentalType = document.getElementById("RentalType_Id");
                                rentalType.options.length = 0;
                                var monthlyDiv = document.getElementById("monthly");
                                var monthlyTypes = ["monthly", "monthly-route", "monthly-trip"]
                                if (monthlyTypes.includes(pTypeName)) {
                                    monthlyDiv.style.display = 'block';
                                }
                                else {
                                    monthlyDiv.style.display = 'none';
                                }
                                var option = document.createElement('option');
                                option.text = 'Select RentalType';
                                option.value = "";
                                rentalType.appendChild(option);
                                var xhr = new XMLHttpRequest();
                                xhr.open('get', `/CorporatePackage/GetRentalType?pTypeId=${pTypeId}`);
                                xhr.send();
                                xhr.onload = function () {
                                    if (xhr.status == 200) {
                                        var res = JSON.parse(xhr.response);
                                        for (var i = 0; i < res.length; i++) {
                                            var opt = document.createElement("option");
                                            opt.text = res[i].RentalTypeName;
                                            opt.value = res[i].Id;
                                            rentalType.appendChild(opt);
                                        }
                                    }
                                };
                                xhr.onerror = function () {
                                    console.log(xhr.statusText);
                                };
                            }
                        </script>
