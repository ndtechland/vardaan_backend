@model VardaanCab.Domain.DTO.EscortDTO
@{
    ViewBag.Title = "Escort";
    //Layout = "~/Views/Shared/Master/_NewAdminLayout.cshtml";
    Layout = "~/Views/Shared/New_Master/_FinelAdminLayout.cshtml";
}
<style>
   
    .import-row {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        width: 100%;
    }

        .import-row .col-md-12 {
            text-align: right;
            margin-bottom: 15px;
        }


    .import-form-container {
        display: flex;
        justify-content: flex-end;
        align-items: center;
        width: 100%;
    }


        .import-form-container .col-md-7,
        .import-form-container .col-md-2 {
            margin-left: 10px;
        }
</style>
<div class="row m-t-40">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-block">
                <h5>Add Escort</h5>
                <div class="page-header-breadcrumb">
                    <ul class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="#!">
                                <i class="fa fa-home"></i>
                            </a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="#!">ETS</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="#!">Add Escort</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <!-- Basic Inputs Validation start -->
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <!-- Heading -->
                <h5>@ViewBag.Heading</h5>

                <!-- Import and Export Section -->
                <div class="d-flex align-items-center">
                    <!-- Export Section -->
                    <b class="mr-2">Import To Excel Format:</b>
                    <a href="@Url.Action("ExportToExcelForImport", "EscortETS")" class="btn btn-link">
                        <img src="~/files/assets/images/Export-Image.png" alt="Export" class="img-fluid" style="height: 42px; width: 108px;" />
                    </a>

                    <!-- Import Form -->
                    @using (Html.BeginForm("ImportEscortData", "EscortETS", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="d-flex align-items-center ml-3">
                            <input type="file" class="form-control-file mr-2" name="file" required style="width: 200px;" />
                            <button type="submit" class="btn btn-primary btn-sm">Import</button>
                        </div>
                    }
                </div>
            </div>

            <!-- Show All Button -->
            <div class="text-end mt-3">
                <a href="/EscortETS/EscortsList?menuId=@ViewBag.menuId" class="btn btn-primary">Show all</a>
            </div>


            <div class="card-block">
                <form action="Escort" method="post" enctype="multipart/form-data" id="escortForm">
                    <input name="MenuId" type="hidden" value="@ViewBag.menuId" />
                    <input name="Id" type="hidden" value="@Model.Id" />
                    @if (TempData["msg"] != null)
                    {
                        <div class="mb-3">
                            <div class="alert alert-success border-success">
                                @TempData["msg"]
                            </div>
                        </div>
                    }
                    @if (TempData["errormsg"] != null)
                    {
                        <div class="mb-3">
                            <div class="alert alert-success border-danger">
                                @TempData["errormsg"]
                            </div>
                        </div>
                    }
                    <div class="row">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-4">
                                    <label class="form-label-title">Escort's Name</label> <span class="text-danger">*</span>
                                    @Html.TextBoxFor(a => a.EscortName, new { @class = "form-control", id = "escortName", placeholder = "Escort's Name", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.EscortName)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">Escort's Father Name</label> <span class="text-danger">*</span>
                                    @Html.TextBoxFor(a => a.EscortFatheName, new { @class = "form-control", placeholder = "Escort's Father Name", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.EscortFatheName)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">Escort's Mobile Number</label> <span class="text-danger">*</span>
                                    @Html.TextBoxFor(a => a.EscortMobileNumber, new { @class = "form-control", placeholder = "Escort's Mobile Number", maxlength = "10", onkeydown = "validateNumericInput(event)", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.EscortMobileNumber)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">Escort's Aadhaar Number</label> <span class="text-danger">*</span>
                                    @Html.TextBoxFor(a => a.EscortAadhaarNumber, new { @class = "form-control", placeholder = "Escort's Aadhaar Number", maxlength = "12", onkeydown = "validateNumericInput(event)", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.EscortAadhaarNumber)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">Select Vendor</label>
                                    @Html.DropDownListFor(a => a.VendorId, Model.Vendors, "--Select Vendor--", new { @class = "form-control", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.VendorId)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">Date of Birth</label> <span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control", required = "required", placeholder = "Enter Date of Joining", type = "Date", max = DateTime.Now.ToString("yyyy-MM-dd") })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.DOB)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">Escort's Employee Id</label> <span class="text-danger">*</span>
                                    @Html.TextBoxFor(a => a.EscortEmployeeId, new { @class = "form-control", placeholder = "Escort's Employee Id", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.EscortEmployeeId)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">PIN Code</label> <span class="text-danger">*</span>
                                    @Html.TextBoxFor(a => a.Pincode, new { @class = "form-control", placeholder = "PIN Code", maxlength = "6", onkeydown = "validateNumericInput(event)", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.Pincode)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">Select Company</label> <span class="text-danger">*</span>
                                    @Html.DropDownListFor(a => a.CompanyId, Model.Companies, "--Select Company--", new { @class = "form-control", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.CompanyId)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">Permanent Address</label> <span class="text-danger">*</span>
                                    @Html.TextAreaFor(a => a.PermanentAddress, new { @class = "form-control", placeholder = "Permanent Address", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.PermanentAddress)
                                    </span>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label-title">Escort's Address</label> <span class="text-danger">*</span>
                                    @Html.TextAreaFor(a => a.EscortAddress, new { @class = "form-control", placeholder = "Escort's Address", required = "required" })
                                    <span class="text-danger">
                                        @Html.ValidationMessageFor(a => a.EscortAddress)
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer text-end">
                        <button type="submit" class="btn btn-primary">@ViewBag.BtnTXT</button>
                        <button type="reset" class="btn btn-outline-primary">Reset</button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Basic Inputs Validation end -->

    </div>
</div>


<script>
    function validateNumericInput(event) {
        if ([46, 8, 9, 27, 13].indexOf(event.keyCode) !== -1 ||
            (event.keyCode == 65 && event.ctrlKey === true) ||
            (event.keyCode >= 35 && event.keyCode <= 39)) {
            return;
        }
        if ((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) {
            event.preventDefault();
        }
    }

</script>
@*<script> 

    function validateNumericInput(event) {
        const keyCode = event.keyCode || event.which;
        if (keyCode < 48 || keyCode > 57) {
            event.preventDefault();
        }
    }
</script>*@