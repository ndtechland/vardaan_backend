@model VardaanCab.Models.DTO.CustomerDTO
@{
    ViewBag.Title = "Add Client";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}
<link href="/css/fixtable.css" rel="stylesheet" />

<style>
    .row{
        margin-top:1% !important;
    }
</style>


@using (Html.BeginForm())
{
    <input type="hidden" name="MenuId" value="@ViewBag.menuId" />

<div style="width:100%">

    <div class="row r">
        <div class="col-md-12">
            <a href="/Admin/SubMenu?menuId=@ViewBag.menuId" class="btn btn-info" style="margin-left:2%">Back</a>

           <a href="/Customer/All?menuId=@ViewBag.menuId" class="btn btn-info">Show all</a>
        </div>
    </div>

    <div class="row r">
        <div class="col-md-12">
            <h2>Add Client</h2>
        </div>
    </div>

    @if (TempData["msg"] != null)
    {
        <div class="row r">
            <div class="col-md-12">
                <div class="alert alert-info">
                    @TempData["msg"]
                </div>
            </div>
        </div>
    }

   
<div class="row r">
    <div class="col-md-6">
        State *
        @Html.DropDownListFor(a => a.State_Id, Model.StateList, "Select", new { @class = "form-control", required = "required" })
        <span class="text-danger">
            @Html.ValidationMessageFor(a => a.State_Id)
        </span>
    </div>
    <div class="col-md-6">
        City *      
        @Html.DropDownListFor(a => a.City_Id, Enumerable.Empty<SelectListItem>(), "Select City", new { @class = "form-control", required = "required" })

        <span class="text-danger">
            @Html.ValidationMessageFor(a => a.City_Id)
        </span>
    </div>

</div>
            
    <div class="row r">

        <div class="col-md-6">
            Company Name *
            @Html.TextBoxFor(a => a.CompanyName, new { @class = "form-control" })
            <span class="text-danger">
                @Html.ValidationMessageFor(a => a.CompanyName)
            </span>
        </div>
        <div class="col-md-6">
            Parent Customer (If any)
            @Html.DropDownListFor(a => a.ParentCustomer_Id, Model.CustomerList, "Select", new { @class = "form-control" })
            <span class="text-danger">
                @Html.ValidationMessageFor(a => a.CustomerName)
            </span>
        </div>
    </div>
            
    <div class="row r">
        <div class="col-md-6">
            Contact Person Name *
            @Html.TextBoxFor(a => a.CustomerName, new { @class = "form-control" })
            <span class="text-danger">
                @Html.ValidationMessageFor(a => a.CustomerName)
            </span>
        </div>
        <div class="col-md-6">
            Email *
            @Html.TextBoxFor(a => a.Email, new { @class = "form-control" })
            <span class="text-danger">
                @Html.ValidationMessageFor(a => a.Email)
            </span>
        </div>


    </div>
            
    <div class="row r">
        <div class="col-md-6">
            Contact No *
            @Html.TextBoxFor(a => a.ContactNo, new { @class = "form-control" })
            <span class="text-danger">
                @Html.ValidationMessageFor(a => a.ContactNo)
            </span>
        </div>
        <div class="col-md-6">
            Alternate Contact No
            @Html.TextBoxFor(a => a.AlternateNo, new { @class = "form-control" })
            <span class="text-danger">
                @Html.ValidationMessageFor(a => a.AlternateNo)
            </span>
        </div>


    </div>

           
    <div class="row r">
        <div class="col-md-6">
            GSTIN
            @Html.TextBoxFor(a => a.GSTIN, new { @class = "form-control" })
            <span class="text-danger">
                @Html.ValidationMessageFor(a => a.GSTIN)
            </span>
        </div>
        <div class="col-md-6">
            Full Address *
            @Html.TextAreaFor(a => a.FullAddress, new { @class = "form-control" })
            <span class="text-danger">
                @Html.ValidationMessageFor(a => a.FullAddress)
            </span>
        </div>

    </div>
        </div>
   
<div class="form-group" style="margin-top:2%;" id="packageDiv">
    Packages *
    @if (Model.Packages.Count() > 0)
                {
        <div class="mainDiv">
            <div class="wrapperTable table-scroll">
                <table id="table1" class="table">
                <thead>
                    <tr>
                        <th class="sticky-col first-col"><input type="checkbox" id="all" /></th>
                        <th class="sticky-col second-col">Vehicle</th>
                        <th class="sticky-col third-col">RentalType</th>
                        <th>PackageType</th>
                        <th>Fare</th>
                        <th>MinKm</th>
                        <th>MinHrs</th>
                        <th>ExtraPerHour</th>
                        <th>ExtraPerKm</th>
                        <th>NightCharges</th>
                        @*<th>Interstate Charges</th>*@
                        <th>Outstation TA/Day</th>
                        <th>Pickup loc.</th>
                        <th>Drop loc.</th>
                        <th>Days(For Monthly)</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Packages.Count(); i++)
                    {

                        <tr>
                            <td class="sticky-col first-col">@Html.CheckBoxFor(a => a.Packages[i].IsChecked, new { @class = "chkAvail" })</td>
                            <td class="sticky-col second-col">
                                @Html.HiddenFor(a => a.Packages[i].CorporatePackage_Id)
                                @Html.HiddenFor(a => a.Packages[i].RentalType_Id)
                                @Html.HiddenFor(a => a.Packages[i].VehicleModel_Id)

                                @Model.Packages[i].ModelName
                            </td>
                            <td class="sticky-col third-col">
                                <span>@Model.Packages[i].RentalTypeName</span>
                                @*@Html.TextBoxFor(a => a.Packages[i].RentalTypeName, new { @class = "form-control", Value = Model.Packages[i].RentalTypeName, disabled = "disabled" })*@
                            </td>
                            <td>
                                @Model.Packages[i].PackageTypeName
                            </td>
                            

                            <td>
                                @Html.TextBoxFor(a => a.Packages[i].Fare, new { @class = "form-control", Value = Model.Packages[i].Fare, required = "required" })
                            </td>
                            @*<td><input type="text" class="form-control" name="Packages[@i].Fare" value="@Model.Packages[i].Fare" required /></td>*@
                            <td>@Html.TextBoxFor(a => a.Packages[i].MinKm, new { @class = "form-control", Value = Model.Packages[i].MinKm, required = "required"})</td>
                            <td>@Html.TextBoxFor(a => a.Packages[i].MinHrs, new { @class = "form-control", Value = Model.Packages[i].MinHrs, required = "required" })</td>
                            <td>@Html.TextBoxFor(a => a.Packages[i].ExtraPerHour, new { @class = "form-control", Value = Model.Packages[i].ExtraPerHour, required = "required" })</td>
                            <td>@Html.TextBoxFor(a => a.Packages[i].ExtraPerKm, new { @class = "form-control", Value = Model.Packages[i].ExtraPerKm, required = "required" })</td>
                            <td>@Html.TextBoxFor(a => a.Packages[i].NightCharges, new { @class = "form-control", Value = Model.Packages[i].NightCharges, required = "required" })</td>
                           @* <td>@Html.TextBoxFor(a => a.Packages[i].InterStateCharge, new { @class = "form-control", Value = Model.Packages[i].InterStateCharge, required = "required" })</td>*@
                            <td>@Html.TextBoxFor(a => a.Packages[i].OutStationCharge, new { @class = "form-control", Value = Model.Packages[i].OutStationCharge, required = "required" })</td>
                            <td>@Html.TextBoxFor(a => a.Packages[i].PickupLocation, new { @class = "form-control", Value = Model.Packages[i].PickupLocation })</td>
                            <td>@Html.TextBoxFor(a => a.Packages[i].DropLocation, new { @class = "form-control", Value = Model.Packages[i].DropLocation })</td>
                            <td>@Html.TextBoxFor(a => a.Packages[i].NoOfDays, new { @class = "form-control", Value = Model.Packages[i].NoOfDays })</td>
                        </tr>
                    }
                </tbody>
            </table>
            </div>
        </div>
            

    }

</div>

<div class="form-group">
    <input type="submit" class="btn btn-info" value="Save" />
</div>
}

<script>
    $("#all").click(function () {
        var allPackage = $(".chkAvail");
        var chkCurrent = $(this);
        if (chkCurrent.prop("checked") == true) {
            allPackage.prop("checked", true);
        }
        else {
            allPackage.prop("checked", false);

        }
    });

    $("#ParentCustomer_Id").change(function () {
        var el = $(this);
        var id = el.val() ? parseInt(el.val()) : 0;
        var packageDiv = $("#packageDiv");
        if (id > 0) {
            packageDiv.hide();
        }
        else {
            packageDiv.show();
        }
    })


    $("#State_Id").change(function () {
            var id = $(this).val();
            $.get('/Common/GetCityByState?stateId=' + id, function (r) {
                var dd = $("#City_Id");
                dd.empty();
                dd.append('<option value="">Select city</option>');
                $.each(r, function (k, v) {
                    dd.append('<option value="' + v.Id + '">' + v.CityName + '</option>');

                })
            })
        });

</script>